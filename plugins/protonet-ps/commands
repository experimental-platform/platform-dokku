#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$(dirname $0)/../common/functions"

dokku_col5_log_msg() {
  printf "%-25s %-25s %-25s %-25s %-25s\n" "$@"
}

case "$1" in
  protonet:ls)
    dokku_apps=$(ls -d $DOKKU_ROOT/*/ 2>/dev/null) || (echo "You haven't deployed any applications yet" && exit 1)

    for dokku_app in $dokku_apps; do
      APP=$(basename $dokku_app)
      DOKKU_APP_CIDS=$(get_container_ids $APP)
      DOCKER_RUNNING_CONTAINERS=$(docker ps -q --no-trunc)
      if [[ -n $DOKKU_APP_CIDS ]]; then
        for DOKKU_APP_CID in $DOKKU_APP_CIDS; do
          DOKKU_APP_CONTAINER_STATUS="stopped"
          [[ $DOCKER_RUNNING_CONTAINERS =~ $DOKKU_APP_CID ]] && DOKKU_APP_CONTAINER_STATUS="started"
          DOKKU_APP_CONTAINER_TYPE=$(grep -l $DOKKU_APP_CID $DOKKU_ROOT/$APP/CONTAINER.* | awk -F. '{ print $2 }')
          [[ -e $DOKKU_ROOT/$APP/TECHNOLOGIE ]] && TECHNOLOGIE=$(cat $DOKKU_ROOT/$APP/TECHNOLOGIE)
          [[ -z $TECHNOLOGIE ]] && TECHNOLOGIE=none
          dokku_col5_log_msg "$APP" "$DOKKU_APP_CONTAINER_TYPE" "$TECHNOLOGIE" "${DOKKU_APP_CID:0:12}" "$DOKKU_APP_CONTAINER_STATUS"
        done
      else
        dokku_col5_log_msg "$APP" "NOT_DEPLOYED" "NOT_DEPLOYED" "NOT_DEPLOYED" "NOT_DEPLOYED"
      fi
    done
    ;;
  help | protonet:help)
      cat && cat<<EOF
      protonet:ls                                 List Apps the protonet-way
EOF

  *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;
esac
